# syntax=docker/dockerfile:1

# Multi-stage build for slim container optimized for Daytona
FROM node:22-alpine AS base

# Install only essential system dependencies
RUN apk add --no-cache \
    python3 \
    py3-pip \
    git \
    curl \
    ca-certificates \
    && rm -rf /var/cache/apk/*

# Install Claude Code CLI using official installer
RUN curl -fsSL https://claude.ai/install.sh | sh

# Add Claude to PATH
ENV PATH="/root/.local/bin:$PATH"

# Set working directory
WORKDIR /app

# Copy package files for better caching
COPY container_src/package*.json ./

# Install npm dependencies with clean cache
RUN npm ci --only=production && npm cache clean --force

# Copy TypeScript configuration
COPY container_src/tsconfig.json ./

# Copy source code
COPY container_src/src/ ./src/

# Build TypeScript
RUN npm run build

# Remove dev dependencies and source files to reduce size
RUN rm -rf src/ tsconfig.json node_modules/.cache/

# Optimize for Daytona deployment
EXPOSE 8080

# Health check for Daytona monitoring
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/ || exit 1

# Use non-root user for security
RUN addgroup -g 1001 -S nodejs && adduser -S claude -u 1001 -G nodejs
USER claude

# Run the compiled JavaScript
CMD ["node", "dist/main.js"]